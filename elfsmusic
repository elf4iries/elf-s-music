--[[
    YouTube Music Player (Basalt UI)
    Autor: elf4iries
    Instalação automática: Basalt corrigida
    Tema: fada mágica com interface azul
]]

-- Função para verificar se o Basalt está instalado corretamente
local function isBasaltInstalled()
    -- Verifica de várias formas se o Basalt está disponível
    if fs.exists("/basalt") then
        return true
    end
    if fs.exists("/basalt.lua") then
        return true
    end
    if fs.exists("/rom/modules/main/basalt.lua") then
        return true
    end
    
    -- Tenta carregar o Basalt para ver se funciona
    local success, _ = pcall(require, "basalt")
    return success
end

-- Instalar Basalt automaticamente se não estiver instalado
if not isBasaltInstalled() then
    print("================================")
    print(" Instalando Basalt...")
    print("================================")
    
    -- Método 1: Tentar instalar do Pyroxenium
    print("Tentando método 1: Pyroxenium/Basalt2...")
    local success1 = shell.run("wget", "run", "https://raw.githubusercontent.com/Pyroxenium/Basalt2/main/install.lua")
    
    if not success1 or not isBasaltInstalled() then
        -- Método 2: Tentar instalar do madefor.cc (oficial)
        print("Metodo 1 falhou. Tentando metodo 2: madefor.cc...")
        local success2 = shell.run("wget", "run", "https://basalt.madefor.cc/install.lua")
        
        if not success2 or not isBasaltInstalled() then
            -- Método 3: Download manual do basalt.lua
            print("Metodo 2 falhou. Tentando metodo 3: Download direto...")
            local response = http.get("https://raw.githubusercontent.com/Pyroxenium/Basalt2/main/basalt.lua")
            if response then
                local basaltCode = response.readAll()
                response.close()
                local file = fs.open("basalt.lua", "w")
                file.write(basaltCode)
                file.close()
                print("Download direto concluido!")
            else
                print("================================")
                print("         ERRO NA INSTALACAO       ")
                print("================================")
                print(" Nao foi possivel instalar o")
                print(" Basalt automaticamente.")
                print("")
                print(" Tente instalar manualmente:")
                print("")
                print(" wget run https://basalt.madefor.cc/install.lua")
                print("")
                print(" Ou:")
                print(" wget run https://raw.githubusercontent.com/")
                print("        Pyroxenium/Basalt2/main/install.lua")
                print("================================")
                return
            end
        end
    end
    
    print("")
    print(" Basalt instalado com sucesso! ")
    print("")
end

-- Carregar Basalt com segurança
local basalt
local success, err = pcall(function()
    basalt = require("basalt")
end)

if not success then
    print("Erro ao carregar Basalt: " .. tostring(err))
    print("Tente reiniciar o computador ou reinstalar o Basalt.")
    return
end

-- Cria a janela principal
local main = basalt.createFrame()
main:setBackground(colors.black)

-- Banner decorativo com fadinha ASCII
local banner = {
    "          _",
    "      .-'-.-'-.", 
    "        e l f 4 i r i e s",
    "      '-.-'-.-'-",
    "          -"
}

for i, line in ipairs(banner) do
    local label = main:addLabel()
    label:setText(line)
    label:setPosition(6, i)
    label:setForeground(colors.lightBlue)
end

-- Título
local title = main:addLabel()
title:setText("YOUTUBE MUSIC PLAYER")
title:setPosition(9, 8)
title:setForeground(colors.white)

-- Label do input
local inputLabel = main:addLabel()
inputLabel:setText("Digite:")
inputLabel:setPosition(3, 11)
inputLabel:setForeground(colors.cyan)

-- Campo de texto
local input = main:addInput()
input:setPosition(3, 12)
input:setSize(40, 3)
input:setBackground(colors.blue)
input:setForeground(colors.white)

-- Botão de busca
local btn = main:addButton()
btn:setText("BUSCAR")
btn:setPosition(3, 16)
btn:setSize(12, 3)
btn:setBackground(colors.lightBlue)
btn:setForeground(colors.black)

-- Status
local status = main:addLabel()
status:setText("")
status:setPosition(3, 20)
status:setForeground(colors.lime)

-- Lista de resultados
local results = main:addList()
results:setPosition(3, 22)
results:setSize(40, 8)
results:setBackground(colors.blue)
results:setForeground(colors.white)
results:setVisible(false)

-- Função do botão
btn:onClick(function()
    local query = input:getValue()
    if not query or query == "" then
        status:setText("Digite algo!")
        return
    end
    
    status:setText("Buscando...")
    results:setVisible(false)
    
    local url = "https://music.madefor.cc/search?q=" .. textutils.urlEncode(query)
    local response = http.get(url, nil, true)
    
    if not response then
        status:setText("Erro ao conectar!")
        return
    end
    
    local data = response.readAll()
    response.close()
    
    local success, items = pcall(textutils.unserialiseJSON, data)
    
    if not success or not items or #items == 0 then
        status:setText("Sem resultados")
        return
    end
    
    status:setText("Encontrados: " .. #items .. " musicas")
    results:clear()
    
    for i = 1, math.min(8, #items) do
        results:addItem(items[i].title)
    end
    
    results:setVisible(true)
end)

-- Quando o usuário seleciona algo na lista
results:onSelect(function(self)
    local idx = self:getItemIndex()
    status:setText("Selecionado item " .. idx)
end)

-- Inicia a interface
basalt.lua()
