--[[
    YouTube Music Player (Basalt UI)
    Autor: elf4iries 🧚
    Instalação automática: Basalt do Pyroxenium
    Tema: fada mágica com interface azul
]]

-- Caminho da pasta Basalt
local basaltPath = "/basalt"

-- 🔹 Baixar automaticamente o Basalt se não existir
if not fs.exists(basaltPath) then
    print("Baixando Basalt...")
    print("URL: https://raw.githubusercontent.com/Pyroxenium/Basalt2/main/install.lua")
    
    -- Baixar e executar o instalador
    local success = shell.run("wget", "run", "https://raw.githubusercontent.com/Pyroxenium/Basalt2/main/install.lua")
    
    if not success then
        print("Erro: não foi possível instalar o Basalt automaticamente.")
        print("Tente instalar manualmente:")
        print("wget run https://raw.githubusercontent.com/Pyroxenium/Basalt2/main/install.lua")
        return
    end
    
    print("Basalt instalado com sucesso!")
end

-- 🔹 Carregar Basalt com segurança
local basalt = require("basalt")

-- Cria a janela principal
local main = basalt.createFrame()
main:setBackground(colors.black)

-- 🌙 Banner decorativo com fadinha ASCII
local banner = {
    "          ✨🧚✨",
    "      ╔═☆═☆═☆═☆═☆═╗",
    "        e l f 4 i r i e s",
    "      ╚═☆═☆═☆═☆═☆═╝",
    "          ✨🧚✨"
}

for i, line in ipairs(banner) do
    local label = main:addLabel()
    label:setText(line)
    label:setPosition(6, i)
    label:setForeground(colors.lightBlue)
end

-- Título
local title = main:addLabel()
title:setText("YOUTUBE MUSIC PLAYER")
title:setPosition(9, 8)
title:setForeground(colors.white)

-- Label do input
local inputLabel = main:addLabel()
inputLabel:setText("Digite:")
inputLabel:setPosition(3, 11)
inputLabel:setForeground(colors.cyan)

-- Campo de texto
local input = main:addInput()
input:setPosition(3, 12)
input:setSize(40, 3)
input:setBackground(colors.blue)
input:setForeground(colors.white)

-- Botão de busca
local btn = main:addButton()
btn:setText("BUSCAR")
btn:setPosition(3, 16)
btn:setSize(12, 3)
btn:setBackground(colors.lightBlue)
btn:setForeground(colors.black)

-- Status
local status = main:addLabel()
status:setText("")
status:setPosition(3, 20)
status:setForeground(colors.lime)

-- Lista de resultados
local results = main:addList()
results:setPosition(3, 22)
results:setSize(40, 8)
results:setBackground(colors.blue)
results:setForeground(colors.white)
results:setVisible(false)

-- Função do botão
btn:onClick(function()
    local query = input:getValue()
    if not query or query == "" then
        status:setText("Digite algo!")
        return
    end
    
    status:setText("Buscando... ✨")
    results:setVisible(false)
    
    local url = "https://music.madefor.cc/search?q=" .. textutils.urlEncode(query)
    local response = http.get(url, nil, true)
    
    if not response then
        status:setText("Erro ao conectar! 🧚")
        return
    end
    
    local data = response.readAll()
    response.close()
    
    local items = textutils.unserialiseJSON(data)
    
    if not items or #items == 0 then
        status:setText("Sem resultados 💫")
        return
    end
    
    status:setText("Encontrados: " .. #items .. " músicas 🎵")
    results:clear()
    
    for i = 1, math.min(8, #items) do
        results:addItem(items[i].title)
    end
    
    results:setVisible(true)
end)

-- Quando o usuário seleciona algo na lista
results:onSelect(function(self)
    local idx = self:getItemIndex()
    status:setText("✨ Selecionado item " .. idx .. " 🧚")
end)

-- Inicia a interface
basalt.run()
