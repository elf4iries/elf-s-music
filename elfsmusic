--[[
    YouTube Music Player - Advanced Pocket Noise
    Tema: Periwinkle - Corrigido
]]

local basalt = require("basalt")

local main = basalt.createFrame()
main:setBackground(colors.lightBlue)

-- Cores do tema
local TEXT_COLOR = colors.white
local BUTTON_COLOR = colors.blue
local BACKGROUND_COLOR = colors.lightBlue

-- Título
local title = main:addLabel()
title:setText("ADVANCED POCKET NOISE")
title:setPosition(2, 2)
title:setForeground(TEXT_COLOR)

local subtitle = main:addLabel()
subtitle:setText("YouTube Music Player")
subtitle:setPosition(2, 3)
subtitle:setForeground(colors.gray)

-- Campo de URL
local urlLabel = main:addLabel()
urlLabel:setText("YouTube URL:")
urlLabel:setPosition(2, 5)
urlLabel:setForeground(TEXT_COLOR)

local urlInput = main:addInput()
urlInput:setPosition(2, 6)
urlInput:setSize(45, 1)
urlInput:setBackground(colors.white)
urlInput:setForeground(colors.black)

-- Controles principais
local playBtn = main:addButton()
playBtn:setText("PLAY")
playBtn:setPosition(2, 8)
playBtn:setSize(8, 3)
playBtn:setBackground(BUTTON_COLOR)
playBtn:setForeground(TEXT_COLOR)

local stopBtn = main:addButton()
stopBtn:setText("STOP")
stopBtn:setPosition(12, 8)
stopBtn:setSize(8, 3)
stopBtn:setBackground(BUTTON_COLOR)
stopBtn:setForeground(TEXT_COLOR)

local pauseBtn = main:addButton()
pauseBtn:setText("PAUSE")
pauseBtn:setPosition(22, 8)
pauseBtn:setSize(8, 3)
pauseBtn:setBackground(BUTTON_COLOR)
pauseBtn:setForeground(TEXT_COLOR)

-- Status
local statusLabel = main:addLabel()
statusLabel:setText("Status:")
statusLabel:setPosition(2, 12)
statusLabel:setForeground(TEXT_COLOR)

local status = main:addLabel()
status:setText("Ready")
status:setPosition(9, 12)
status:setForeground(colors.lime)

local currentTrack = main:addLabel()
currentTrack:setText("Current: None")
currentTrack:setPosition(2, 13)
currentTrack:setForeground(TEXT_COLOR)

-- Lista de favoritos
local favLabel = main:addLabel()
favLabel:setText("Favorites:")
favLabel:setPosition(2, 15)
favLabel:setForeground(TEXT_COLOR)

local favorites = main:addList()
favorites:setPosition(2, 16)
favorites:setSize(45, 4)
favorites:setBackground(colors.white)
favorites:setForeground(colors.black)

-- Adicionar músicas de exemplo
favorites:addItem("Rick Astley - Never Gonna Give You Up")
favorites:addItem("Queen - Bohemian Rhapsody")

-- Variáveis de estado
local isPlaying = false

-- Função para obter o texto do input - CORRIGIDA
local function getUrlText()
    -- Método alternativo para obter o valor do input
    local url = ""
    local success, result = pcall(function()
        return urlInput:getValue()
    end)
    
    if success and result then
        url = result
    else
        -- Tentar método alternativo
        success, result = pcall(function()
            return urlInput:getText()
        end)
        if success and result then
            url = result
        end
    end
    
    return url
end

-- Função para tocar música
local function playMusic(url, trackName)
    if not url or url == "" then
        status:setText("Enter URL")
        return false
    end
    
    if isPlaying then
        stopMusic()
        sleep(0.5)
    end
    
    status:setText("Loading...")
    
    if trackName then
        currentTrack:setText("Current: " .. trackName)
    else
        currentTrack:setText("Current: " .. url:sub(1, 20) .. "...")
    end
    
    isPlaying = true
    
    -- Executar em thread separada
    parallel.waitForAny(
        function()
            local success = pcall(function()
                shell.run("noise", url)
            end)
            
            isPlaying = false
            if success then
                status:setText("Finished")
                currentTrack:setText("Current: None")
            else
                status:setText("Error - noise not found?")
            end
        end,
        function()
            while isPlaying do
                local event = os.pullEvent()
                if event == "terminate" then
                    break
                end
            end
        end
    )
    
    return true
end

-- Função para parar
local function stopMusic()
    if isPlaying then
        isPlaying = false
        os.queueEvent("terminate")
        pcall(function()
            shell.run("noise", "stop")
        end)
        status:setText("Stopped")
        currentTrack:setText("Current: None")
    else
        status:setText("Not playing")
    end
end

-- Função para pausar
local function pauseMusic()
    if isPlaying then
        status:setText("Paused")
    else
        status:setText("Not playing")
    end
end

-- Event handlers CORRIGIDOS
playBtn:onClick(function()
    local url = getUrlText()
    playMusic(url)
end)

stopBtn:onClick(function()
    stopMusic()
end)

pauseBtn:onClick(function()
    pauseMusic()
end)

-- Quando seleciona uma música favorita
favorites:onSelect(function(self, event, item)
    if event == "mouse_click" then
        local selected = self:getItem(self:getItemIndex())
        local urls = {
            ["Rick Astley - Never Gonna Give You Up"] = "https://www.youtube.com/watch?v=dQw4w9WgXcQ",
            ["Queen - Bohemian Rhapsody"] = "https://www.youtube.com/watch?v=fJ9rUzIMcZQ"
        }
        
        if urls[selected] then
            -- Definir a URL no campo de entrada
            pcall(function()
                urlInput:setValue(urls[selected])
            end)
            playMusic(urls[selected], selected)
        end
    end
end)

-- Instruções
local help = main:addLabel()
help:setText("Tip: Install 'noise' program for audio")
help:setPosition(2, 19)
help:setForeground(colors.gray)

-- Iniciar a interface
basalt.autoUpdate()
